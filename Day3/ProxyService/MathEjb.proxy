<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config" xmlns:con2="http://www.bea.com/wli/sb/stages/transform/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="SOAP" isSoap12="false" xsi:type="con:SoapBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:wsdl ref="osbtraining4/Resources/WSDLs/MathMultiplePortTypeBndPort"/>
      <con:port>
        <con:name>MathMultiplePortTypeBndPort</con:name>
        <con:namespace>http://esb.quadras.co.id/MathMultiple/</con:namespace>
      </con:port>
      <con:selector type="SOAP action"/>
      <con:WSI-compliant>false</con:WSI-compliant>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
    <ser:ws-policy>
      <ser:binding-mode>wsdl-policy-attachments</ser:binding-mode>
    </ser:ws-policy>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/osbtraining4/ProxyService/MathEjb</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router errorHandler="_onErrorHandler-9011782399237933338-6d7a3d6f.186c9a7c909.-7ea2">
    <con:pipeline type="request" name="PipelinePairNode1_request">
      <con:stage name="stage1">
        <con:context>
          <con1:varNsDecl namespace="http://esb.quadras.co.id/MathMultiple/input_MathMultiple/" prefix="inp"/>
        </con:context>
        <con:actions>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7e66</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Input Body : ',fn:normalize-space(fn-bea:serialize($body)))</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:assign varName="firstNumber">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7dfe</con1:id>
            <con2:expr>
              <con1:xqueryText>$body/inp:inputMathMultiple/Input/FirstNumber</con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:assign varName="secondNumber">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7dc6</con1:id>
            <con2:expr>
              <con1:xqueryText>$body/inp:inputMathMultiple/Input/SecondNumber</con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7dc3</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('First Number : ',$firstNumber)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7dc1</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Second Number : ',$secondNumber)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
        </con:actions>
      </con:stage>
      <con:stage name="stage2">
        <con:context/>
        <con:actions>
          <con2:assign varName="missingMandatoryField">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7b60</con1:id>
            <con2:expr>
              <con1:xqueryText>if(fn:string-length(fn-bea:trim($firstNumber))=0) then
	 'firstNumber'
else if(fn:string-length(fn-bea:trim($secondNumber))=0) then
	 'secondNumber'
else
	''</con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7b5d</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Missing Mandatory Field : ',$missingMandatoryField)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:ifThenElse>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7b39</con1:id>
            <con2:case>
              <con2:condition>
                <con1:xqueryText>fn:string-length($missingMandatoryField)>0</con1:xqueryText>
              </con2:condition>
              <con2:actions>
                <con2:Error>
                  <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7afd</con1:id>
                  <con2:errCode>999</con2:errCode>
                  <con2:message>Missing mandatory field</con2:message>
                </con2:Error>
              </con2:actions>
            </con2:case>
            <con2:default/>
          </con2:ifThenElse>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode1_response">
      <con:stage name="stage1">
        <con:context/>
        <con:actions>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7e48</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Result : ',$result)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:assign varName="newBody">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7da6</con1:id>
            <con2:expr>
              <con1:xqueryText><![CDATA[<outputMathMultiple>
	<Output>
    	<ErrorSchema>
        	<ErrorCode>000</ErrorCode>
        	<ErrorMessage>Success</ErrorMessage>
    	</ErrorSchema>
    	<OutputSchema>
    		<Result>{$result}</Result>
    	</OutputSchema>
   	</Output>
</outputMathMultiple>]]></con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:replace varName="body">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d8b</con1:id>
            <con2:location>
              <con1:xpathText>.</con1:xpathText>
            </con2:location>
            <con2:expr>
              <con1:xqueryText>$newBody</con1:xqueryText>
            </con2:expr>
          </con2:replace>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d88</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Output Body : ',fn:normalize-space(fn-bea:serialize($body)))</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con1:reply>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d6f</con1:id>
          </con1:reply>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="request" name="PipelinePairNode2_request">
      <con:stage name="stage1">
        <con:context>
          <con1:varNsDecl namespace="http://esb.quadras.co.id/MathMultiple/outputMathMultiple/" prefix="out"/>
        </con:context>
        <con:actions>
          <con2:wsCallout>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7f43</con1:id>
            <con2:service xsi:type="ref:BusinessServiceRef" ref="osbtraining4/BusinessService/ejb" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con2:operation>add</con2:operation>
            <con2:request>
              <con2:body wrapped="false">$inputAddOperation</con2:body>
            </con2:request>
            <con2:response>
              <con2:body wrapped="false">outputAddOperation</con2:body>
            </con2:response>
            <con2:requestTransform>
              <con2:assign varName="inputAddOperation">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d3d</con1:id>
                <con2:expr>
                  <con1:xqueryText><![CDATA[<open:add xmlns:open="http://www.openuri.org/">
    <open:firstNumber>{$firstNumber}</open:firstNumber>
    <open:secondNumber>{$secondNumber}</open:secondNumber>
</open:add>]]></con1:xqueryText>
                </con2:expr>
              </con2:assign>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d3b</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Input Add Operation : ',fn:normalize-space(fn-bea:serialize($inputAddOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
            </con2:requestTransform>
            <con2:responseTransform>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d39</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Output Add Operation : ',fn:normalize-space(fn-bea:serialize($outputAddOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
              <con2:assign varName="result">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7d26</con1:id>
                <con2:expr>
                  <con1:xqueryText>$outputAddOperation/text()</con1:xqueryText>
                </con2:expr>
              </con2:assign>
            </con2:responseTransform>
          </con2:wsCallout>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode2_response"/>
    <con:pipeline type="request" name="PipelinePairNode3_request">
      <con:stage name="stage1">
        <con:context>
          <con1:varNsDecl namespace="http://esb.quadras.co.id/MathMultiple/outputMathMultiple/" prefix="out"/>
        </con:context>
        <con:actions>
          <con2:wsCallout>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7f1b</con1:id>
            <con2:service xsi:type="ref:BusinessServiceRef" ref="osbtraining4/BusinessService/ejb" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con2:operation>substract</con2:operation>
            <con2:request>
              <con2:body wrapped="true">$inputSubstractOperation</con2:body>
            </con2:request>
            <con2:response>
              <con2:body wrapped="true">outputSubstractOperation</con2:body>
            </con2:response>
            <con2:requestTransform>
              <con2:assign varName="inputSubstractOperation">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7cec</con1:id>
                <con2:expr>
                  <con1:xqueryText><![CDATA[<open:substract xmlns:open="http://www.openuri.org/">
    <open:firstNumber>{$firstNumber}</open:firstNumber>
    <open:secondNumber>{$secondNumber}</open:secondNumber>
</open:substract>]]></con1:xqueryText>
                </con2:expr>
              </con2:assign>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7ce9</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Input Substract Operation : ',fn:normalize-space(fn-bea:serialize($inputSubstractOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
            </con2:requestTransform>
            <con2:responseTransform>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7ce7</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Output Substract Operation : ',fn:normalize-space(fn-bea:serialize($outputSubstractOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
              <con2:assign varName="result">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7ccd</con1:id>
                <con2:expr>
                  <con1:xqueryText>$outputSubstractOperation/text()</con1:xqueryText>
                </con2:expr>
              </con2:assign>
            </con2:responseTransform>
          </con2:wsCallout>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode3_response"/>
    <con:pipeline type="request" name="PipelinePairNode4_request">
      <con:stage name="stage1">
        <con:context>
          <con1:varNsDecl namespace="http://esb.quadras.co.id/MathMultiple/outputMathMultiple/" prefix="out"/>
        </con:context>
        <con:actions>
          <con2:wsCallout>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7edc</con1:id>
            <con2:service xsi:type="ref:BusinessServiceRef" ref="osbtraining4/BusinessService/ejb" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con2:operation>multiply</con2:operation>
            <con2:request>
              <con2:body wrapped="true">$inputMultiplyOperation</con2:body>
            </con2:request>
            <con2:response>
              <con2:body wrapped="true">outputMultiplyOperation</con2:body>
            </con2:response>
            <con2:requestTransform>
              <con2:assign varName="inputMultiplyOperation">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c8a</con1:id>
                <con2:expr>
                  <con1:xqueryText><![CDATA[<open:multiply xmlns:open="http://www.openuri.org/">
    <open:firstNumber>{$firstNumber}</open:firstNumber>
    <open:secondNumber>{$secondNumber}</open:secondNumber>
</open:multiply>]]></con1:xqueryText>
                </con2:expr>
              </con2:assign>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c88</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Input Substract Operation : ',fn:normalize-space(fn-bea:serialize($inputMultiplyOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
            </con2:requestTransform>
            <con2:responseTransform>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c86</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Output Multiply Operation : ',fn:normalize-space(fn-bea:serialize($outputMultiplyOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
              <con2:assign varName="result">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c5d</con1:id>
                <con2:expr>
                  <con1:xqueryText>$outputMultiplyOperation/text()</con1:xqueryText>
                </con2:expr>
              </con2:assign>
            </con2:responseTransform>
          </con2:wsCallout>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode4_response"/>
    <con:pipeline type="request" name="PipelinePairNode5_request">
      <con:stage name="stage1">
        <con:context>
          <con1:varNsDecl namespace="http://esb.quadras.co.id/MathMultiple/outputMathMultiple/" prefix="out"/>
        </con:context>
        <con:actions>
          <con2:wsCallout>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7ea3</con1:id>
            <con2:service xsi:type="ref:BusinessServiceRef" ref="osbtraining4/BusinessService/ejb" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con2:operation>divide</con2:operation>
            <con2:request>
              <con2:body wrapped="true">$inputDivideOperation</con2:body>
            </con2:request>
            <con2:response>
              <con2:body wrapped="true">outputDivideOperation</con2:body>
            </con2:response>
            <con2:requestTransform>
              <con2:assign varName="inputDivideOperation">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c35</con1:id>
                <con2:expr>
                  <con1:xqueryText><![CDATA[<open:divide xmlns:open="http://www.openuri.org/">
    <open:firstNumber>{$firstNumber}</open:firstNumber>
    <open:secondNumber>{$secondNumber}</open:secondNumber>
</open:divide>]]></con1:xqueryText>
                </con2:expr>
              </con2:assign>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c33</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Input Divide Operation : ',fn:normalize-space(fn-bea:serialize($inputDivideOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
            </con2:requestTransform>
            <con2:responseTransform>
              <con2:javaCallout varName="">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c31</con1:id>
                <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
                <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
                <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
                <con2:expr>
                  <con1:xqueryText>'DEBUG'</con1:xqueryText>
                </con2:expr>
                <con2:expr>
                  <con1:xqueryText>concat('Output Divide Operation : ',fn:normalize-space(fn-bea:serialize($outputDivideOperation)))</con1:xqueryText>
                </con2:expr>
              </con2:javaCallout>
              <con2:assign varName="result">
                <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7c0d</con1:id>
                <con2:expr>
                  <con1:xqueryText>$outputDivideOperation/text()</con1:xqueryText>
                </con2:expr>
              </con2:assign>
            </con2:responseTransform>
          </con2:wsCallout>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode5_response"/>
    <con:pipeline type="error" name="_onErrorHandler-9011782399237933338-6d7a3d6f.186c9a7c909.-7ea2">
      <con:stage name="stage1">
        <con:context/>
        <con:actions>
          <con2:assign varName="newBody">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7be6</con1:id>
            <con2:expr>
              <con1:xqueryText><![CDATA[<outputMathMultiple>
	<Output>
    	<ErrorSchema>
        	<ErrorCode>000</ErrorCode>
        	<ErrorMessage>Success</ErrorMessage>
    	</ErrorSchema>
    	<OutputSchema>
    		<Result>{$result}</Result>
    	</OutputSchema>
   	</Output>
</outputMathMultiple>]]></con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:replace varName="body">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7ba2</con1:id>
            <con2:location>
              <con1:xpathText>.</con1:xpathText>
            </con2:location>
            <con2:expr>
              <con1:xqueryText>$newBody</con1:xqueryText>
            </con2:expr>
          </con2:replace>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7ba0</con1:id>
            <con2:archive ref="osbtraining4/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Output Body : ',fn:normalize-space(fn-bea:serialize($body)))</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con1:reply>
            <con1:id>_ActionId-9011782399237933338-6d7a3d6f.186c9a7c909.-7b83</con1:id>
          </con1:reply>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:flow>
      <con:pipeline-node name="PipelinePairNode1">
        <con:request>PipelinePairNode1_request</con:request>
        <con:response>PipelinePairNode1_response</con:response>
      </con:pipeline-node>
      <con:branch-node type="operation" name="BranchNode1">
        <con:context/>
        <con:branch-table>
          <con:branch name="Add">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNode2">
                <con:request>PipelinePairNode2_request</con:request>
                <con:response>PipelinePairNode2_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:branch name="Substract">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNode3">
                <con:request>PipelinePairNode3_request</con:request>
                <con:response>PipelinePairNode3_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:branch name="Multiply">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNode4">
                <con:request>PipelinePairNode4_request</con:request>
                <con:response>PipelinePairNode4_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:branch name="Divide">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNode5">
                <con:request>PipelinePairNode5_request</con:request>
                <con:response>PipelinePairNode5_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:default-branch>
            <con:flow/>
          </con:default-branch>
        </con:branch-table>
      </con:branch-node>
    </con:flow>
  </ser:router>
</xml-fragment>